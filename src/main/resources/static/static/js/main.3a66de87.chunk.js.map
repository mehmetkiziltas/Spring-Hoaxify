{"version":3,"sources":["components/Input.jsx","components/ButtonWithProgress.jsx","shared/ApiProgress.jsx","redux/Constants.jsx","api/apiCalls.jsx","redux/authActions.jsx","pages/UserSignupPages.jsx","pages/LoginPage.jsx","components/LanguageSelector.jsx","assets/profile.png","components/ProfileImageWithDefault.jsx","components/Modal.jsx","components/HoaxView.jsx","components/Spinner.jsx","components/HoaxFeed.jsx","components/AutoUploadImage.jsx","components/HoaxSubmit.jsx","components/UserListItem.jsx","components/UserList.jsx","pages/HomePage.jsx","pages/ProfileCard.jsx","pages/UserPage.jsx","assets/hoaxify.png","components/TopBar.jsx","container/App.js","reportWebVitals.js","i18n.jsx","redux/authReducer.jsx","redux/configureStore.jsx","index.js"],"names":["Input","props","label","error","name","onChange","type","defaultValue","className","undefined","ButtonWithProgress","onClick","pendingApiCall","disabled","text","useApiProgress","apiMethod","apiPath","strictPath","useState","setPendingApiCall","useEffect","requestIntercepter","responseIntercepter","updateApiCallFor","method","url","inProgress","startsWith","axios","interceptors","request","use","response","config","eject","LOGOUT_SUCCESS","LOGIN_SUCCESS","UPDATE_SUCCESS","getUsers","page","size","get","setAuthorizationHeader","isLoggedIn","token","authorizationHeaderValue","defaults","headers","getUser","username","updateUser","body","put","postHoax","hoax","post","getHoaxes","path","getOldHoaxes","id","getNewHoaxCount","getNewHoaxes","postHoaxAttachment","attachment","deleteHoax","delete","deleteUser","logoutSuccess","dispacth","a","ACTIONS","updateSuccess","displayName","image","payload","loginSuccess","authState","loginHandler","credentials","dispatch","creds","data","user","password","signupHandler","UserSingupPage","passwordRepeatError","passwordRepeat","form","setForm","errors","setErrors","t","useTranslation","useDispatch","event","target","value","previousErrors","previousForm","onClickSignup","preventDefault","push","history","validationErrors","usernameError","displayNameError","passwordError","pendingApiCallSignup","pendingApiCallLogin","LoginPage","setUsername","setPassword","setError","onClickLogin","message","buttonEnabled","LanguageSelector","i18n","onChangeLanguage","language","changeLanguage","src","alt","style","cursor","ProfileImageWithDefault","tempimage","imageSource","defaultPicture","onError","Modal","visible","onClickCancel","onClickOk","title","okButton","backgroundColor","HoaxView","loggedInUser","useSelector","store","onDeleteHoax","userVM","content","timestamp","fileAttachmentVM","formatted","format","modalVisible","setModalVisible","ownedByLoggedInUser","onClickDelete","width","height","to","fileType","Spinner","HoaxFeed","last","number","hoaxPage","setHoaxPage","newHoaxCount","setNewHoaxCount","useParams","initialHoaxLoadProgress","lastHoaxId","firstHoaxId","length","lastHoaxIndex","oldHoaxPath","loadOldHoaxesProgress","newHoaxPath","loadNewHoaxesProgress","looper","setInterval","count","clearInterval","previousHoaxPage","loadHoaxes","loadOldHoaxes","loadNewHoaxes","onDeleteHoaxSuccess","filter","map","AutoUploadImage","uploading","position","opacity","HoaxSubmit","focused","setFocused","setHoax","newImage","setNewImage","attachmentId","setAttachmentId","pendingFileUpload","onClickHoaxify","uploadFile","file","FormData","append","textAreaClass","rows","onFocus","files","fileReader","FileReader","onloadend","result","readAsDataURL","UserListItem","withTranslation","setPage","loadFailure","setLoadFailure","loadUsers","users","first","actionDiv","previousPage","nextPage","HomePage","ProfileCard","loggedInUsername","setUser","inEditMode","setInEditMode","updateDisplayName","setUpdateDisplayName","pathUsername","setValidationErrors","useHistory","editable","setEditable","previousValidationErrors","onClickSave","split","onClickDeleteUser","pendingApiCallDeleteUser","imageError","UserPage","notFound","setNotFound","loadUser","fontSize","TopBar","menuArea","useRef","menuVisible","setMenuVisible","document","addEventListener","menuClickTracker","removeEventListener","current","contains","links","dropDownClass","ref","logo","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initReactI18next","init","resources","en","translations","Login","Logout","Users","Next","Previous","tr","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","register","index","defaultState","authReducer","state","action","secureLS","SecureLS","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","subscribe","newState","getState","set","configureStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3a66de87.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = (props) => {\r\n    const { label, error, name, onChange, type, defaultValue } = props;\r\n    let className = \"form-control\";\r\n    if (type ==='file') {\r\n        className += \"-file\";\r\n    }\r\n\r\n    if (error !== undefined) {\r\n        className += \" is-invalid\";\r\n    }\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label>{label}</label>\r\n            <input\r\n                className={className}\r\n                name={name}\r\n                onChange={onChange}\r\n                type={type}\r\n                defaultValue={ defaultValue } />\r\n            <div className=\"invalid-feedback\">{error}</div>\r\n        </div>\r\n    );\r\n}\r\nexport default Input;","import React from 'react';\r\n\r\nconst ButtonWithProgress = (props) => {\r\n    const { onClick, pendingApiCall, disabled, text, className } = props;\r\n    return (\r\n        <button\r\n            className={className || \"btn btn-primary\"}\r\n            onClick={onClick}\r\n            disabled={disabled}>\r\n            {pendingApiCall && \r\n            <span className=\"spinner-border spinner-border-sm\"></span>}\r\n            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ButtonWithProgress;","import axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport const useApiProgress = (apiMethod, apiPath, strictPath) => {\r\n    const [pendingApiCall, setPendingApiCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let requestIntercepter, responseIntercepter;\r\n\r\n        const updateApiCallFor = (method, url, inProgress) => {\r\n            if (method !== apiMethod) {\r\n                return;\r\n            }\r\n            if (strictPath && url === apiPath) {\r\n                setPendingApiCall(inProgress);\r\n            } else if (!strictPath && url.startsWith(apiPath)) {\r\n                setPendingApiCall(inProgress);\r\n            }\r\n        }\r\n\r\n        const registerInterceptors = () => {\r\n\r\n            requestIntercepter = axios.interceptors.request.use((request) => {\r\n                const { url, method } = request;\r\n                updateApiCallFor(method, url, true);\r\n                return request\r\n            })\r\n            responseIntercepter = axios.interceptors.response.use((response) => {\r\n                const { url, method } = response.config;\r\n                updateApiCallFor(method, url, false);\r\n                return response\r\n            }, (error) => {\r\n                const { url, method } = error.config;\r\n                updateApiCallFor(method, url, false);\r\n                throw error\r\n            })\r\n        };\r\n\r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestIntercepter);\r\n            axios.interceptors.response.eject(responseIntercepter);\r\n        }\r\n\r\n        registerInterceptors();\r\n\r\n        return function unmount() {\r\n            unregisterInterceptors();\r\n        }\r\n    }, [apiPath, apiMethod, strictPath]);\r\n\r\n    return pendingApiCall;\r\n}","export const LOGOUT_SUCCESS = 'logout-success';\r\n\r\nexport const LOGIN_SUCCESS = 'login-success';\r\n\r\nexport const UPDATE_SUCCESS = 'update-success'\r\n\r\n","import axios from \"axios\"\r\n\r\nexport const singup = body => {\r\n    return axios.post('/api/1.0/users', body);\r\n}\r\n\r\nexport const login = creds => {\r\n    return axios.post('/api/1.0/auth', creds);\r\n};\r\n\r\nexport const logout = () => {\r\n    return axios.post('/api/1.0/logout');\r\n}\r\n\r\nexport const changeLanguage = language => {\r\n    axios.defaults.headers['accept-language'] = language;\r\n}\r\n\r\nexport const getUsers = (page = 0, size = 5) => {\r\n    return axios.get(`/api/1.0/users?page=${page}&size=${size}`);\r\n}\r\n\r\nexport const setAuthorizationHeader = ({ isLoggedIn, token }) => {\r\n    if (isLoggedIn) {\r\n        const authorizationHeaderValue = `Bearer ${token}`\r\n        axios.defaults.headers['Authorization'] = authorizationHeaderValue;\r\n    } else {\r\n        delete axios.defaults.headers['Authorization'];\r\n    }\r\n}\r\n\r\nexport const getUser = username => {\r\n    return axios.get(`/api/1.0/users/${username}`);\r\n}\r\n\r\nexport const updateUser = (username, body) => {\r\n    return axios.put(`/api/1.0/users/${username}`, body);\r\n}\r\n\r\nexport const postHoax = hoax => {\r\n    return axios.post('/api/1.0/hoaxes', hoax);\r\n}\r\n\r\nexport const getHoaxes = (username, page = 0) => {\r\n    const path = username\r\n        ? `/api/1.0/users/${username}/hoaxes?page=`\r\n        : '/api/1.0/hoaxes?page=';\r\n    return axios.get(path + page);\r\n}\r\n\r\nexport const getOldHoaxes = (id, username) => {\r\n    const path = username\r\n        ? `/api/1.0/users/${username}/hoaxes/${id}`\r\n        : `/api/1.0/hoaxes/${id}`;\r\n    return axios.get(path);\r\n}\r\n\r\nexport const getNewHoaxCount = (id, username) => {\r\n    const path = username\r\n        ? `/api/1.0/users/${username}/hoaxes/${id}?count=true`\r\n        : `/api/1.0/hoaxes/${id}?count=true`;\r\n    return axios.get(path);\r\n}\r\n\r\nexport const getNewHoaxes = (id, username) => {\r\n    const path = username\r\n        ? `/api/1.0/users/${username}/hoaxes/${id}?direction=after`\r\n        : `/api/1.0/hoaxes/${id}?direction=after`;\r\n    return axios.get(path);\r\n}\r\n\r\nexport const postHoaxAttachment = (attachment) => {\r\n    return axios.post('/api/1.0/hoax-attachments', attachment);\r\n}\r\n\r\nexport const deleteHoax = (id) => {\r\n    return axios.delete(`/api/1.0/hoaxes/${id}`);\r\n}\r\n\r\nexport const deleteUser = (username) => {\r\n    return axios.delete(`/api/1.0/users/${username}`);\r\n}","import * as ACTIONS from './Constants'\r\nimport { login, logout, singup } from '../api/apiCalls';\r\n\r\nexport const logoutSuccess = () => {\r\n    return async function(dispacth){\r\n        try {\r\n            await logout();\r\n        } catch (err) {\r\n            \r\n        }\r\n        dispacth({\r\n            type: ACTIONS.LOGOUT_SUCCESS\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateSuccess = ({ displayName, image }) => {\r\n    return {\r\n        type: ACTIONS.UPDATE_SUCCESS,\r\n        payload: {\r\n            displayName,\r\n            image\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginSuccess = (authState) => {\r\n    return {\r\n        type: ACTIONS.LOGIN_SUCCESS,\r\n        payload: authState\r\n    }\r\n}\r\n\r\nexport const loginHandler = (credentials) => {\r\n    return async (dispatch) => {\r\n        const response = await login(credentials);\r\n        const authState = {\r\n            ...response.data.user,\r\n            password: credentials.password,\r\n            token: response.data.token\r\n        }\r\n        dispatch(loginSuccess(authState));\r\n        return response;\r\n    }\r\n}\r\n\r\nexport const signupHandler = (user) => {\r\n    return async (dispatch) => {\r\n        const response = await singup(user);\r\n        await dispatch(loginHandler(user))\r\n        return response;\r\n    }\r\n}","import { useTranslation } from 'react-i18next';\r\nimport React, { useState } from 'react';\r\nimport Input from '../components/Input';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux'\r\nimport { signupHandler } from '../redux/authActions';\r\n\r\n\r\nconst UserSingupPage = (props) => {\r\n\r\n    const [form, setForm] = useState({\r\n        username: null,\r\n        displayName: null,\r\n        password: null,\r\n        passwordRepeat: null\r\n    })\r\n    const [errors, setErrors] = useState({})\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch()\r\n\r\n    const onChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        setErrors((previousErrors) => ({ ...previousErrors, [name]: undefined }))\r\n        setForm((previousForm) => ({ ...previousForm, [name]: value }));\r\n    }\r\n\r\n    const onClickSignup = async event => {\r\n        event.preventDefault();\r\n        const { push } = props.history;\r\n\r\n\r\n        const { username, displayName, password } = form;\r\n        const body = {\r\n            username,\r\n            displayName,\r\n            password\r\n        }\r\n        try {\r\n            await dispatch(signupHandler(body));\r\n            push('/')\r\n        } catch (error) {\r\n            if (error.response.data.validationErrors) {\r\n                setErrors(error.response.data.validationErrors)\r\n            }\r\n        }\r\n    }\r\n\r\n    const { username: usernameError, displayName: displayNameError, password: passwordError } = errors;\r\n    const pendingApiCallSignup = useApiProgress('post', '/api/1.0/users');\r\n    const pendingApiCallLogin = useApiProgress('post', '/api/1.0/auth');\r\n    const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n\r\n    let passwordRepeatError;\r\n    if (form.password !== form.passwordRepeat) {\r\n        passwordRepeatError = t(\"Password mismatch\");\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <form>\r\n                <h1 className=\"text-center\">{t('Sign Up')}</h1>\r\n                <Input name=\"username\" label={t(\"Username\")} error={usernameError} onChange={onChange}></Input>\r\n\r\n                <Input name=\"displayName\" label={t(\"Display Name\")} error={displayNameError} onChange={onChange}></Input>\r\n\r\n                <Input name=\"password\" label={t(\"Password\")} error={passwordError} onChange={onChange} type=\"password\"></Input>\r\n\r\n                <Input name=\"passwordRepeat\" label={t(\"Password Repeat\")} error={passwordRepeatError} onChange={onChange} type=\"password\" />\r\n\r\n                <div className=\"text-center\"><br />\r\n                    <ButtonWithProgress\r\n                        onClick={onClickSignup}\r\n                        disabled={pendingApiCall || passwordRepeatError !== undefined}\r\n                        pendingApiCall={pendingApiCall}\r\n                        text={t(\"Sign Up\")} />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserSingupPage;","import React, { useState, useEffect } from 'react'\r\nimport Input from '../components/Input'\r\nimport { useTranslation } from 'react-i18next'\r\nimport ButtonWithProgress from '../components/ButtonWithProgress'\r\nimport { useApiProgress } from '../shared/ApiProgress'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginHandler } from '../redux/authActions'\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const [username, setUsername] = useState()\r\n    const [password, setPassword] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n    const [error, setError] = useState()\r\n\r\n    const { push } = props.history;\r\n\r\n    useEffect(() => {\r\n        setError(undefined)\r\n    }, [username, password])\r\n\r\n    const onClickLogin = async event => {\r\n        event.preventDefault();\r\n        const creds = {\r\n            username,\r\n            password\r\n        }\r\n        setError(undefined);\r\n        try {\r\n            await dispatch(loginHandler(creds))\r\n            push(\"/\");\r\n        } catch (apiError) {\r\n            setError(apiError.response.data.message);\r\n        }\r\n    }\r\n\r\n    const { t } = useTranslation();\r\n    const pendingApiCall = useApiProgress('post', '/api/1.0/auth')\r\n    const buttonEnabled = username && password\r\n    return (\r\n        <div className=\"container\">\r\n            <form>\r\n                <h1 className=\"text-center\">{t('Login')}</h1>\r\n                <Input label={t(\"Username\")} onChange={(event) => setUsername(event.target.value)} />\r\n                <Input label={t(\"Password\")} type=\"password\" onChange={(event) => setPassword(event.target.value)}></Input>\r\n                {error && <div className=\"alert alert-danger\">\r\n                    {error}\r\n                </div>}\r\n                <div className=\"text-center mt-2\">\r\n                    <ButtonWithProgress\r\n                        onClick={onClickLogin}\r\n                        disabled={!buttonEnabled || pendingApiCall}\r\n                        pendingApiCall={pendingApiCall}\r\n                        text={t('Login')} />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { changeLanguage } from '../api/apiCalls';\r\n\r\nconst LanguageSelector = () => {\r\n\r\n    const { i18n } = useTranslation();\r\n\r\n\r\n    const onChangeLanguage = language => {\r\n        i18n.changeLanguage(language);\r\n        changeLanguage(language);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <img src=\"https://www.countryflags.io/tr/flat/24.png\" alt=\"Turkish Flag\" onClick={() => onChangeLanguage('tr')} style={{ cursor: 'pointer' }} />\r\n            <img src=\"https://www.countryflags.io/us/flat/24.png\" alt=\"USA Flag\" onClick={() => onChangeLanguage('en')} style={{ cursor: 'pointer' }} />\r\n        </div>\r\n    )\r\n}\r\nexport default LanguageSelector;","export default __webpack_public_path__ + \"static/media/profile.06c30927.png\";","import React from 'react';\r\nimport defaultPicture from '../assets/profile.png'\r\n\r\nconst ProfileImageWithDefault = (props) => {\r\n    const { image, tempimage } = props;\r\n    let imageSource = defaultPicture;\r\n    if (image) {\r\n        imageSource = 'images/profile/' + image;\r\n    }\r\n    return (\r\n        <img alt={`Profile`}\r\n            src={tempimage || imageSource}\r\n            {...props}\r\n            onError={ event => {\r\n                event.target.src = defaultPicture;\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProfileImageWithDefault;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\n\r\nconst Modal = (props) => {\r\n\r\n    const { visible, onClickCancel, onClickOk, message, pendingApiCall, title, okButton } = props;\r\n    const { t } = useTranslation();\r\n\r\n    let className = 'modal fade';\r\n\r\n    if (visible) {\r\n        className += ' show d-block'\r\n    }\r\n\r\n    return (\r\n        <div className={className} style={{ backgroundColor: '#000000b0' }} >\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" >{title}</h5>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {message}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" disabled={pendingApiCall} onClick={onClickCancel} >\r\n                            {t('Cancel')}\r\n                        </button>\r\n                        <ButtonWithProgress\r\n                            className=\"btn btn-danger\"\r\n                            onClick={onClickOk}\r\n                            pendingApiCall={pendingApiCall}\r\n                            disabled={pendingApiCall}\r\n                            text={okButton}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'timeago.js'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport { deleteHoax } from '../api/apiCalls';\r\nimport Modal from './Modal';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\n\r\nconst HoaxView = (props) => {\r\n\r\n    const loggedInUser = useSelector(store => store.username)\r\n\r\n    const { hoax, onDeleteHoax } = props;\r\n    const { userVM, content, timestamp, fileAttachmentVM, id } = hoax;\r\n    const { username, displayName, image } = userVM;\r\n    const { i18n, t } = useTranslation();\r\n    const formatted = format(timestamp, i18n.language);\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n\r\n    const ownedByLoggedInUser = loggedInUser === username;\r\n\r\n    const pendingApiCall = useApiProgress('delete', `/api/1.0/hoaxes/${id}`, true)\r\n\r\n    const onClickDelete = async () => {\r\n        await deleteHoax(id);\r\n        onDeleteHoax(id);\r\n    }\r\n\r\n    const onClickCancel = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card p-1\">\r\n                <div className=\"d-flex\">\r\n                    <ProfileImageWithDefault\r\n                        image={image}\r\n                        width=\"32\"\r\n                        height=\"32\"\r\n                        className=\"rounded-circle m-1\"\r\n                    />\r\n                    <div className=\"flex-fill m-auto pl-2\">\r\n                        <Link to={`/user/${username}`} className=\"text-dark\">\r\n                            <h6 className=\"d-inline\">\r\n                                {displayName} @ {username}\r\n                            </h6>\r\n                            <span> - </span>\r\n                            <span>{formatted}</span>\r\n                        </Link>\r\n                    </div>\r\n                    {ownedByLoggedInUser && (\r\n                        <button className=\"btn btn-delete-link btn-sm\"\r\n                            onClick={() => setModalVisible(true)}>\r\n                            <i className=\"material-icons\">delete_outline</i>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div className=\"pl-5\">\r\n                    {content}\r\n                </div>\r\n                {fileAttachmentVM && (\r\n                    <div className=\"pl-5\">\r\n                        {fileAttachmentVM.fileType.startsWith('image') && (\r\n                            <img\r\n                                className=\"img-fluid\"\r\n                                src={'images/attachments/' + fileAttachmentVM.name}\r\n                                alt={content}\r\n                            />\r\n                        )}\r\n                        {!fileAttachmentVM.fileType.startsWith('image') && (\r\n                            <strong>Hoax has unknown attachment</strong>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Modal\r\n                visible={modalVisible}\r\n                title={t('Delete Hoax')}\r\n                onClickCancel={onClickCancel}\r\n                onClickOk={onClickDelete}\r\n                pendingApiCall={pendingApiCall}\r\n                message={\r\n                    <div>\r\n                        <div><strong>{t('Are you sure to delete hoax?')}</strong></div>\r\n                        <span>{content}</span>\r\n                    </div>\r\n                }\r\n                okButton={t('Delete Hoax')}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HoaxView;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Spinner = () => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border text-black-50\">\r\n                <span className=\"sr-only\">{t('Loading...')}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getHoaxes, getNewHoaxCount, getNewHoaxes, getOldHoaxes } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport HoaxView from './HoaxView';\r\nimport Spinner from './Spinner';\r\n\r\nconst HoaxFeed = () => {\r\n\r\n    const [hoaxPage, setHoaxPage] = useState({\r\n        content: [],\r\n        last: true,\r\n        number: 0\r\n    })\r\n    const [newHoaxCount, setNewHoaxCount] = useState(0)\r\n    const { t } = useTranslation();\r\n\r\n    const { username } = useParams();\r\n    const path = username\r\n        ? `/api/1.0/users/${username}/hoaxes?page=`\r\n        : '/api/1.0/hoaxes?page=';\r\n\r\n    const initialHoaxLoadProgress = useApiProgress('get', path);\r\n\r\n    let lastHoaxId = 0;\r\n    let firstHoaxId = 0;\r\n    if (hoaxPage.content.length > 0) {\r\n        firstHoaxId = hoaxPage.content[0].id;\r\n        const lastHoaxIndex = hoaxPage.content.length - 1;\r\n        lastHoaxId = hoaxPage.content[lastHoaxIndex].id;\r\n    }\r\n\r\n    const oldHoaxPath = username\r\n        ? `/api/1.0/users/${username}/hoaxes/${lastHoaxId}`\r\n        : `/api/1.0/hoaxes/${lastHoaxId}`;\r\n    const loadOldHoaxesProgress = useApiProgress('get', oldHoaxPath, true);\r\n\r\n    const newHoaxPath = username\r\n        ? `/api/1.0/users/${username}/hoaxes/${firstHoaxId}?direction=after`\r\n        : `/api/1.0/hoaxes/${firstHoaxId}?direction=after`;\r\n    const loadNewHoaxesProgress = useApiProgress('get', newHoaxPath, true)\r\n\r\n    useEffect(() => {\r\n        const getCount = async () => {\r\n            const response = await getNewHoaxCount(firstHoaxId, username);\r\n            setNewHoaxCount(response.data.count);\r\n        }\r\n        let looper = setInterval(getCount, 5000);\r\n        return function cleanup() {\r\n            clearInterval(looper);\r\n        };\r\n    }, [firstHoaxId, username]);\r\n\r\n    useEffect(() => {\r\n        const loadHoaxes = async (page) => {\r\n            try {\r\n                const response = await getHoaxes(username, page);\r\n                setHoaxPage(previousHoaxPage => ({\r\n                    ...response.data,\r\n                    content: [\r\n                        ...previousHoaxPage.content,\r\n                        ...response.data.content\r\n                    ]\r\n                }));\r\n            } catch (err) {\r\n\r\n            }\r\n        };\r\n        loadHoaxes();\r\n    }, [username]);\r\n\r\n    const loadOldHoaxes = async () => {\r\n\r\n        try {\r\n            const response = await getOldHoaxes(lastHoaxId, username);\r\n            setHoaxPage(previousHoaxPage => ({\r\n                ...response.data,\r\n                content: [\r\n                    ...previousHoaxPage.content,\r\n                    ...response.data.content\r\n                ]\r\n            }));\r\n        } catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    const loadNewHoaxes = async () => {\r\n        try {\r\n            const response = await getNewHoaxes(firstHoaxId,username);\r\n            setHoaxPage(previousHoaxPage => ({\r\n                ...previousHoaxPage,\r\n                content: [...response.data, ...previousHoaxPage.content]\r\n            }));\r\n            setNewHoaxCount(0);\r\n        } catch (err) {\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const onDeleteHoaxSuccess = id => {\r\n        setHoaxPage(previousHoaxPage => ({\r\n            ...previousHoaxPage,\r\n            content: previousHoaxPage.content.filter((hoax) => hoax.id !== id)\r\n        }))\r\n    }\r\n\r\n    const { content, last } = hoaxPage;\r\n\r\n    if (content.length === 0) {\r\n        return (\r\n            <div className=\"alet alert-secondary text-center mt-2\">\r\n                {initialHoaxLoadProgress ? <Spinner /> : t('There are no hoaxes')}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {newHoaxCount > 0 &&\r\n                <div className=\"alet alert-secondary text-center mb-2\"\r\n                    onClick={loadNewHoaxesProgress\r\n                        ? () => { }\r\n                        : () => loadNewHoaxes()}\r\n                    style={{\r\n                        cursor: loadNewHoaxesProgress\r\n                            ? 'not-allowed'\r\n                            : 'pointer'\r\n                    }}\r\n                >\r\n                    {loadNewHoaxesProgress ? <Spinner/> : t('There are new hoaxes')}\r\n                </div>\r\n            }\r\n            {content.map(hoax => {\r\n                return (\r\n                    <HoaxView\r\n                        key={hoax.id}\r\n                        hoax={hoax}\r\n                        onDeleteHoax={onDeleteHoaxSuccess}\r\n                    />\r\n                )\r\n            })}\r\n            {!last &&\r\n                <div\r\n                    className=\"alet alert-secondary text-center mt-2\"\r\n                    onClick={loadOldHoaxesProgress\r\n                        ? () => { }\r\n                        : () => loadOldHoaxes()}\r\n                    style={{\r\n                        cursor: loadOldHoaxesProgress\r\n                            ? 'not-allowed'\r\n                            : 'pointer'\r\n                    }}\r\n                >\r\n                    {loadOldHoaxesProgress ? <Spinner /> : t('Load old hoaxes')}\r\n                </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HoaxFeed;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './AutoUploadImage.css'\r\n\r\nconst AutoUploadImage = ({ image, uploading }) => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <div style={{ position:\"relative\" }}>\r\n            <img className=\"img-thumbnail\"\r\n                src={image}\r\n                alt=\"hoax-attachment\"\r\n            />\r\n            <div className=\"overlay\" style={{opacity: uploading ? 1 : 0}}>\r\n                <div className=\"d-flex justify-content-center h-100\">\r\n                    <div className=\"spinner-border text-light m-auto\">\r\n                        <span className=\"sr-only\">{t('Loading...')}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AutoUploadImage;","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { postHoax, postHoaxAttachment } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport Input from './Input';\r\nimport AutoUploadImage from './AutoUploadImage';\r\n\r\nconst HoaxSubmit = () => {\r\n\r\n    const { image } = useSelector((store) => ({ image: store.image }))\r\n    const [focused, setFocused] = useState(false);\r\n    const [hoax, setHoax] = useState('')\r\n    const [errors, setErrors] = useState({})\r\n    const { t } = useTranslation();\r\n    const [newImage, setNewImage] = useState()\r\n    const [attachmentId, setAttachmentId] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!focused) {\r\n            setHoax('');\r\n            setErrors({});\r\n            setNewImage();\r\n            setAttachmentId();\r\n        }\r\n    }, [focused]);\r\n\r\n    useEffect(() => {\r\n        setErrors({})\r\n    }, [hoax]);\r\n\r\n    const pendingApiCall = useApiProgress('post', '/api/1.0/hoaxes', true);\r\n    const pendingFileUpload = useApiProgress('post', '/api/1.0/hoax-attachments', true);\r\n\r\n    const onClickHoaxify = async () => {\r\n        const body = {\r\n            content: hoax,\r\n            attachmentId: attachmentId\r\n        }\r\n        try {\r\n            await postHoax(body);\r\n            setFocused(false);\r\n        } catch (error) {\r\n            if (error.response.data.validationErrors) {\r\n                setErrors(error.response.data.validationErrors)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangeFile = (event) => {\r\n        if (event.target.files.length < 1) {\r\n            return;\r\n        }\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage(fileReader.result);\r\n            uploadFile(file);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    }\r\n\r\n    const uploadFile = async (file) => {\r\n        const attachment = new FormData();\r\n        attachment.append('file', file);\r\n        const response = await postHoaxAttachment(attachment);\r\n        setAttachmentId(response.data.id)\r\n    }\r\n\r\n    let textAreaClass = 'form-control';\r\n    if (errors.content) {\r\n        textAreaClass += ' is-invalid'\r\n    }\r\n\r\n    return (\r\n        <div className=\"card p-1 flex-row\">\r\n            <ProfileImageWithDefault\r\n                image={image}\r\n                width=\"32\"\r\n                height=\"32\"\r\n                className=\"rounded-circle mr-2\"\r\n            />\r\n            <div className=\"flex-fill\">\r\n                <textarea className={textAreaClass}\r\n                    rows={focused ? '3' : '1'}\r\n                    onFocus={() => setFocused(true)}\r\n                    onChange={(event) => setHoax(event.target.value)}\r\n                    value={hoax}\r\n                />\r\n                <div className=\"invalid-feedback\">{errors.content}</div>\r\n                {focused && (\r\n                    <>\r\n                        {!newImage && <Input type=\"file\" onChange={onChangeFile} />}\r\n                        {newImage &&\r\n                            <AutoUploadImage\r\n                                image={newImage}\r\n                                uploading={pendingFileUpload}\r\n                            />\r\n                        }\r\n                        <div className=\"text-right mt-2\">\r\n                            <ButtonWithProgress\r\n                                className=\"btn btn-primary\"\r\n                                onClick={onClickHoaxify}\r\n                                text={t('Hoaxify')}\r\n                                pendingApiCall={pendingApiCall}\r\n                                disabled={pendingApiCall || pendingFileUpload}\r\n                            />\r\n                            <button\r\n                                className=\"btn btn-light d-inline-flex ml-1\"\r\n                                onClick={() => setFocused(false)}\r\n                                disabled={pendingApiCall || pendingFileUpload}\r\n                            >\r\n                                <i className=\"material-icons\" >close</i>\r\n                                {t('Cancel')}</button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HoaxSubmit;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\n\r\nconst UserListItem = (props) => {\r\n\r\n    \r\n\r\n    const { user } = props;\r\n    const { username, displayName, image } = user;\r\n    return (\r\n        <Link to={`/user/${username}`}\r\n            className=\"list-group-item list-group-item-action\"\r\n            key={username}>\r\n            <ProfileImageWithDefault\r\n                className=\"rounded-circle\"\r\n                width=\"32\"\r\n                height=\"32\"\r\n                image={image}\r\n                alt={`${username} profile`} />\r\n            <span className=\"pl-3\">\r\n                {displayName} @\r\n                {username}\r\n            </span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default UserListItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getUsers } from '../api/apiCalls';\r\nimport { withTranslation } from 'react-i18next';\r\nimport UserListItem from './UserListItem';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useApiProgress } from '../shared/ApiProgress'\r\nimport Spinner from './Spinner';\r\n\r\n\r\nconst UserList = () => {\r\n\r\n    const [page, setPage] = useState({\r\n        content: [],\r\n        size: 3,\r\n        number: 0\r\n    });\r\n\r\n    const [loadFailure, setLoadFailure] = useState(false)\r\n    const pendingApiCall = useApiProgress('get','/api/1.0/users?page');\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, [])\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = page.number + 1;\r\n        loadUsers(nextPage);\r\n    }\r\n\r\n    const onClickPrevious = () => {\r\n        const previousPage = page.number - 1;\r\n        loadUsers(previousPage);\r\n    }\r\n\r\n    const loadUsers = async page => {\r\n        setLoadFailure(false);\r\n        try {\r\n            const response = await getUsers(page);\r\n            setPage(response.data);\r\n        } catch (err) {\r\n            setLoadFailure(true);\r\n        }\r\n    }\r\n\r\n    const { t } = useTranslation();\r\n    const { content: users, last, first } = page;\r\n\r\n    let actionDiv = (\r\n        <div>\r\n            {first === false &&\r\n                (<button className=\"btn btn-sm btn-light\"\r\n                    onClick={onClickPrevious}>{t('Previous')}\r\n                </button>)}\r\n\r\n            {last === false &&\r\n                (<button className=\"btn btn-sm btn-light float-right\"\r\n                    onClick={onClickNext}>{t('Next')}\r\n                </button>)}\r\n        </div>\r\n    )\r\n\r\n    if (pendingApiCall) {\r\n        actionDiv = (\r\n            <Spinner/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        (<div className=\"card\">\r\n            <h3 className=\"card-header text-center\">{t('Users')}</h3>\r\n            <div className=\"list-group-flush\">\r\n                {users.map((user) => (\r\n                    <UserListItem key={user.username} user={user} />\r\n                ))\r\n                }\r\n            </div>\r\n            <div>\r\n                {actionDiv}\r\n                {loadFailure && <div className=\"text-center text-danger\">{t('Load Failure')}</div>}\r\n            </div>\r\n        </div>)\r\n    );\r\n}\r\n\r\nexport default withTranslation()(UserList);","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport HoaxFeed from '../components/HoaxFeed';\r\nimport HoaxSubmit from '../components/HoaxSubmit';\r\nimport UserList from '../components/UserList';\r\n\r\nconst HomePage = () => {\r\n    const { isLoggedIn } = useSelector((store) => ({ isLoggedIn: store.isLoggedIn }))\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6 col-md-8\">\r\n                    {isLoggedIn && <HoaxSubmit />}\r\n                    <HoaxFeed />\r\n                </div>\r\n                <div className=\"col-6 col-md-4\">\r\n                    <UserList />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ProfileImageWithDefault from '../components/ProfileImageWithDefault';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Input from '../components/Input';\r\nimport { deleteUser, updateUser } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { logoutSuccess, updateSuccess } from '../redux/authActions'\r\nimport Modal from '../components/Modal';\r\n\r\nconst ProfileCard = (props) => {\r\n\r\n    const { username: loggedInUsername } = useSelector(store =>\r\n        ({ username: store.username })\r\n    )\r\n    const [user, setUser] = useState({})\r\n    const [inEditMode, setInEditMode] = useState(false);\r\n    const [updateDisplayName, setUpdateDisplayName] = useState();\r\n    const routeParams = useParams();\r\n    const pathUsername = routeParams.username;\r\n    const { t } = useTranslation();\r\n    const [newImage, setNewImage] = useState();\r\n    const [validationErrors, setValidationErrors] = useState({});\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    const { username, displayName, image } = user;\r\n\r\n    const [editable, setEditable] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setUser(props.user)\r\n    }, [props.user])\r\n\r\n    useEffect(() => {\r\n        setEditable(pathUsername === loggedInUsername);\r\n    }, [pathUsername, loggedInUsername]);\r\n\r\n\r\n    useEffect(() => {\r\n        setValidationErrors(previousValidationErrors => ({\r\n            ...previousValidationErrors,\r\n            displayName: undefined\r\n        }));\r\n    }, [updateDisplayName])\r\n\r\n    useEffect(() => {\r\n        setValidationErrors(previousValidationErrors => ({\r\n            ...previousValidationErrors,\r\n            image: undefined\r\n        }));\r\n    }, [newImage])\r\n\r\n    useEffect(() => {\r\n        if (!inEditMode) {\r\n            setUpdateDisplayName(undefined);\r\n            setNewImage(undefined);\r\n        } else {\r\n            setUpdateDisplayName(displayName);\r\n        }\r\n    }, [inEditMode, displayName]);\r\n\r\n    const onClickCancel = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const onClickSave = async () => {\r\n\r\n        let image;\r\n        if (newImage) {\r\n            image = newImage.split(',')[1]\r\n        }\r\n\r\n        const body = {\r\n            displayName: updateDisplayName,\r\n            image\r\n        };\r\n        try {\r\n            const response = await updateUser(username, body);\r\n            setInEditMode(false)\r\n            setUser(response.data)\r\n            dispatch(updateSuccess(response.data))\r\n        } catch (error) {\r\n            setValidationErrors(error.response.data.validationErrors)\r\n        }\r\n    }\r\n    const onChangeFile = (event) => {\r\n        if (event.target.files.length < 1) {\r\n            return;\r\n        }\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage(fileReader.result);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    }\r\n\r\n    const onClickDeleteUser = async () => {\r\n        await deleteUser(username);\r\n        setModalVisible(false);\r\n        dispatch(logoutSuccess());\r\n        history.push('/');\r\n    }\r\n\r\n    const pendingApiCall = useApiProgress('put', `/api/1.0/users/${username}`)\r\n    const pendingApiCallDeleteUser = useApiProgress('delete', `/api/1.0/users/${username}`, true)\r\n    const { displayName: displayNameError, image: imageError } = validationErrors;\r\n\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <div className=\"card-header\">\r\n                <ProfileImageWithDefault\r\n                    className=\"rounded-circle shadow\"\r\n                    width=\"200\"\r\n                    height=\"200\"\r\n                    image={image}\r\n                    tempimage={newImage}\r\n                    alt={`${username} profile`} />\r\n            </div>\r\n            <div className=\"card-body\">\r\n                {!inEditMode && (\r\n                    <>\r\n                        <h3>{displayName} @ {username}</h3>\r\n                        {editable && (\r\n                            <>\r\n                                <button\r\n                                    className=\"btn btn-success d-inline-flex\"\r\n                                    onClick={() => setInEditMode(true)}>\r\n                                    <i className=\"material-icons\">edit</i> {t('Edit')}\r\n                                </button>\r\n                                <div className=\"pt-2\">\r\n                                <button\r\n                                    className=\"btn btn-danger d-inline-flex\"\r\n                                    onClick={() => setModalVisible(true)}\r\n                                    >\r\n                                    <i className=\"material-icons\">directions_run</i> {t('Delete My Account')}\r\n                                </button>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </>\r\n                )}\r\n                {inEditMode && (\r\n                    <div>\r\n                        <Input label={t(\"Change Display Name\")}\r\n                            defaultValue={displayName}\r\n                            onChange={(event) => {\r\n                                setUpdateDisplayName(event.target.value)\r\n                            }}\r\n                            error={displayNameError}\r\n                        >\r\n                        </Input>\r\n                        <Input type=\"file\"\r\n                            onChange={onChangeFile}\r\n                            error={imageError}\r\n                        />\r\n                        <div>\r\n                            <ButtonWithProgress\r\n                                className=\"btn btn-primary d-inline-flex\"\r\n                                onClick={onClickSave}\r\n                                disabled={pendingApiCall}\r\n                                pendingApiCall={pendingApiCall}\r\n                                text={\r\n                                    <>\r\n                                        <i className=\"material-icons\" >save</i>\r\n                                        {t('Save')}\r\n                                    </>\r\n                                } />\r\n                            <button\r\n                                className=\"btn btn-light d-inline-flex ml-1\"\r\n                                onClick={() => setInEditMode(false)}\r\n                                disabled={pendingApiCall}>\r\n                                <i className=\"material-icons\" >close</i>\r\n                                {t('Cancel')}</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Modal\r\n                visible={modalVisible}\r\n                title={t('Delete My Account')}\r\n                okButton={t('Delete My Account')}\r\n                onClickCancel={onClickCancel}\r\n                onClickOk={onClickDeleteUser}\r\n                pendingApiCall={pendingApiCallDeleteUser}\r\n                message={t('Are you sure to delete your account?') }\r\n            />\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default ProfileCard;","import React, { useEffect, useState } from 'react';\r\nimport ProfileCard from './ProfileCard';\r\nimport { getUser } from '../api/apiCalls';\r\nimport { useParams } from 'react-router';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from '../components/Spinner';\r\nimport HoaxFeed from '../components/HoaxFeed'\r\n\r\nconst UserPage = () => {\r\n\r\n    const [user, setUser] = useState({});   \r\n    const { username } = useParams();\r\n    const [notFound, setNotFound] = useState(false)\r\n    const { t } = useTranslation();\r\n\r\n    const pendingApiCall = useApiProgress('get', `/api/1.0/users/${username}`, true);\r\n\r\n    useEffect(() => {\r\n        setNotFound(false);\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        const loadUser = async () => {\r\n            try {\r\n                const response = await getUser(username);\r\n                setUser(response.data)\r\n            } catch (err) {\r\n                setNotFound(true);\r\n            }\r\n        }\r\n        loadUser();\r\n    }, [username])\r\n    \r\n    if (notFound) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"alert alert-danger text-center\">\r\n                    <div>\r\n                        <i className=\"material-icons\" style={{ fontSize: \"48px\" }}>error</i>\r\n                    </div>\r\n                    {t('User Not Found')}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    if (pendingApiCall || user.username !== username) {\r\n        return <Spinner />\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <ProfileCard user={user} />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <HoaxFeed />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPage;","export default __webpack_public_path__ + \"static/media/hoaxify.e76cb420.png\";","import React, { useEffect, useRef, useState } from 'react';\r\nimport logo from '../assets/hoaxify.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutSuccess } from '../redux/authActions'\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\n\r\n\r\nconst TopBar = () => {\r\n\r\n    const { t } = useTranslation();\r\n    const { username, isLoggedIn, displayName, image } = useSelector(store => ({\r\n        isLoggedIn: store.isLoggedIn,\r\n        username: store.username,\r\n        displayName: store.displayName,\r\n        image: store.image\r\n    }));\r\n\r\n    const menuArea = useRef(null)\r\n\r\n    const [menuVisible, setMenuVisible] = useState(false)\r\n    \r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', menuClickTracker);\r\n        return () => {\r\n            document.removeEventListener('click',menuClickTracker);\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n    const menuClickTracker = (event) => {\r\n        if (menuArea.current ===null || !menuArea.current.contains(event.target)) {\r\n            setMenuVisible(false);\r\n        }\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onLogoutSuccess = () => {\r\n        dispatch(logoutSuccess())\r\n    }\r\n\r\n    let links = (\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            <li>\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                    {t('Login')}\r\n                </Link>\r\n            </li>\r\n            <li >\r\n                <Link className=\"nav-link\" to=\"/signup\">\r\n                    {t('Sign Up')}\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n\r\n    if (isLoggedIn) {\r\n        let dropDownClass = 'dropdown-menu p-0 shadow';\r\n        if (menuVisible) {\r\n            dropDownClass +=' show';\r\n        }\r\n        links = (\r\n            <ul className=\"navbar-nav ml-auto\" ref={menuArea}>\r\n                <li className=\"nav-item dropdown\">\r\n                    <div className=\"d-flex\" style={{ cursor: 'pointer' }} onClick={() => setMenuVisible(true)}>\r\n                        <ProfileImageWithDefault\r\n                            image={image}\r\n                            width=\"32\"\r\n                            height=\"32\"\r\n                            className=\"rounded-circle m-auto\"\r\n                        />\r\n                        <span className=\"nav-link dropdown-toggle\">{displayName}</span>\r\n                    </div>\r\n                    <div className={dropDownClass}>\r\n                        <Link className=\"dropdown-item d-flex p-2\" to={`/user/${username}`} onClick={() => setMenuVisible(false)}>\r\n                            <i className=\"material-icons text-info mr-2\">person</i>\r\n                            {t('My Profile')}\r\n                        </Link>\r\n                        <span className=\"dropdown-item d-flex p-2\" onClick={onLogoutSuccess} style={{ cursor: 'pointer' }}>\r\n                            <i className=\"material-icons text-danger mr-2\">power_settings_new</i>\r\n                            {t('Logout')}\r\n                        </span>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"shadow-sm bg-light mb-2\">\r\n            <nav className=\"navbar navbar-light container navbar-expand\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img src={logo} alt=\"Hoaxfy Logo\" width=\"60\" />\r\n                    Hoaxify\r\n                </Link>\r\n                {links}\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopBar;","import React from 'react'\nimport \"../bootstrap-override.scss\";\nimport UserSingupPage from '../pages/UserSignupPages';\nimport LoginPage from '../pages/LoginPage';\nimport LanguageSelector from '../components/LanguageSelector'\nimport HomePage from '../pages/HomePage';\nimport UserPage from '../pages/UserPage';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport TopBar from '../components/TopBar';\nimport { useSelector } from 'react-redux';\n\nconst App = () => {\n\n  const { isLoggedIn } = useSelector(store => ({\n    isLoggedIn: store.isLoggedIn\n  }))\n\n  return (\n    <div>\n      <Router>\n        <TopBar ></TopBar>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          {!isLoggedIn && <Route path=\"/login\" component={LoginPage} />}\n          <Route path=\"/signup\" component={UserSingupPage} />\n          <Route path=\"/user/:username\" component={UserPage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n      <LanguageSelector />\n    </div>\n  )\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport { register } from 'timeago.js';\r\n\r\ni18n.use(initReactI18next).init({\r\n    resources: {\r\n        en: {\r\n            translations: {\r\n                'Sign Up': 'Sign Up',\r\n                'Username': 'Username',\r\n                'Password mismatch': 'Password mismatch',\r\n                'Display Name': 'Display Name',\r\n                'Password': 'Password',\r\n                'Password Repeat': 'Password Repeat',\r\n                Login: 'Login',\r\n                Logout: 'Logout',\r\n                Users: 'Users',\r\n                Next: 'next >',\r\n                Previous: '< previous',\r\n                'Load Failure': 'Load Failure',\r\n                'Loading...': 'Loading...',\r\n                'User Not Found': 'User Not Found',\r\n                'Edit': 'Edit',\r\n                'Save': 'Save',\r\n                'Cancel': 'Cancel',\r\n                'Change Display Name': 'Change Display Name',\r\n                'My Profile': 'My Profile',\r\n                'There are no hoaxes': 'There are no hoaxes',\r\n                'Load old hoaxes': 'Load old hoaxes',\r\n                'There are new hoaxes': 'There are new hoaxes',\r\n                'Delete Hoax': 'Delete Hoax',\r\n                'Are you sure to delete hoax?': 'Are you sure to delete hoax?',\r\n                'Delete My Account': 'Delete My Account',\r\n                'Are you sure to delete your account?': 'Are you sure to delete your account?'\r\n            }\r\n        },\r\n        tr: {\r\n            translations: {\r\n                'Sign Up': 'Kayıt Ol',\r\n                'Username': 'Kullanıcı Adı',\r\n                'Password mismatch': 'Aynı şifreyi giriniz',\r\n                'Display Name': 'Tercih edilen Ad',\r\n                'Password': 'Şifre',\r\n                'Password Repeat': 'Şifre Tekrarı',\r\n                Login: 'Giriş Yap',\r\n                Logout: 'Çıkış Yap',\r\n                Users: 'Kullanıcılar',\r\n                Next: 'sonraki >',\r\n                Previous: '< önceki',\r\n                'Load Failure': 'Yükleme başarısız',\r\n                'Loading...': 'Yükleniyor...',\r\n                'User Not Found': 'Kullanıcı Bulunamadı',\r\n                'Edit': 'Düzenle',\r\n                'Save': 'Kaydet',\r\n                'Cancel': 'İptal Et',\r\n                'Change Display Name': 'Görünür İsminizi Değiştirin',\r\n                'My Profile': 'Hesabım',\r\n                'There are no hoaxes': 'Hoax bulunamadı',\r\n                'Load old hoaxes': 'Eski hoaxları getir',\r\n                'There are new hoaxes': 'Yeni Hoaxlar var',\r\n                'Are you sure to delete hoax?': `Hoax'u silmek istediğinizden emin misiniz?`,\r\n                'Delete Hoax': `Hoax'u sil`,\r\n                'Delete My Account': 'Hesabımı Sil',\r\n                'Are you sure to delete your account?': 'Hesabınızı silmek istediğinizden emin misiniz?'\r\n            }\r\n        }\r\n    },\r\n    fallbackLng: 'en',\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    keySeparator: false,\r\n    interpolation: {\r\n        escapeValue: false,\r\n        formatSeparator: ','\r\n    },\r\n    react: {\r\n        wait: true\r\n    }\r\n})\r\n\r\nconst timeagoTR = (number, index) => {\r\n    return [\r\n        ['az önce', 'şimdi'],\r\n        ['%s saniye önce', '%s saniye içinde'],\r\n        ['1 dakika önce', '1 dakika içinde'],\r\n        ['%s dakika önce', '%s dakika içinde'],\r\n        ['1 saat önce', '1 saat içinde'],\r\n        ['%s saat önce', '%s saat içinde'],\r\n        ['1 gün önce', '1 gün içinde'],\r\n        ['%s gün önce', '%s gün içinde'],\r\n        ['1 hafta önce', '1 hafta içinde'],\r\n        ['%s hafta önce', '%s hafta içinde'],\r\n        ['1 ay önce', '1 ay içinde'],\r\n        ['%s ay önce', '%s ay içinde'],\r\n        ['1 yıl önce', '1 yıl içinde'],\r\n        ['%s yıl önce', '%s yıl içinde'],\r\n    ][index];\r\n}\r\nregister('tr', timeagoTR);\r\n\r\nexport default i18n;","import * as ACTIONS from './Constants'\r\n\r\nconst defaultState = {\r\n  isLoggedIn: false,\r\n  username: undefined,\r\n  displayName: undefined,\r\n  image: undefined,\r\n  password: undefined\r\n}\r\n\r\nconst authReducer = (state = { ...defaultState }, action) => {\r\n  if (action.type === ACTIONS.LOGOUT_SUCCESS) {\r\n    return defaultState;\r\n  } else if (action.type === ACTIONS.LOGIN_SUCCESS) {\r\n    return {\r\n      ...action.payload,\r\n      isLoggedIn: true\r\n    }\r\n  } else if (action.type === ACTIONS.UPDATE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      ...action.payload\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default authReducer;","\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\nimport thunk from 'redux-thunk';\r\nimport { setAuthorizationHeader } from '../api/apiCalls';\r\n\r\nconst secureLS = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n    const hoaxAuth = secureLS.get('hoax-auth');\r\n    let stateInLS = {\r\n        isLoggedIn: false,\r\n        username: undefined,\r\n        displayName: undefined,\r\n        image: undefined,\r\n        password: undefined\r\n    }\r\n\r\n    if (hoaxAuth) {\r\n       return hoaxAuth;\r\n    }\r\n    return stateInLS;\r\n}\r\n\r\nconst updateStateInStorage = newState => {\r\n    secureLS.set('hoax-auth', newState);\r\n}\r\n\r\n\r\nconst configureStore = () => {\r\n    const initialState = getStateFromStorage();\r\n    setAuthorizationHeader(initialState);\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore(authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n    store.subscribe(() => {\r\n        updateStateInStorage(store.getState());\r\n        setAuthorizationHeader(store.getState());\r\n    })\r\n\r\n    return store;\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap-override.scss';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\nimport { Provider } from 'react-redux'\nimport configureStore from './redux/configureStore';\n\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}